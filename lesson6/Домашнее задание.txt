1. Найти уникальные идентификаторы городов, в которых уникальное количество покупателей за последние 5 месяцев без последних двух месяцев составляет от 30 тыс и больше.
Запрос должен вернуть только идентификаторы городов.
Ключевые слова и фразы: JOIN, INTERVAL, GROUP, HAVING, DISTINCT.

2. Для каждой категории найти количество весовых товаров с ценой до 40.
Запрос должен вернуть две колонки: наименование категории и количество товаров с заданным условием.
Ключевые слова и фразы: JOIN, GROUP.

3. Найти в разрезе наименований категорий уникальное количество транзакций, в которых была куплена 1 ед/кг/шт/л (qnty) любого товара из этой категории.
Запрос должен вернуть наименование категории и количество уникальных транзакций.
Ключевые слова и фразы: JOIN, GROUP, DISTINCT.

4. Найти топ-10 уникальных наименований брендов, у которых самый дорогой по цене товар дешевле, чем у других брендов.
Другими словами необходимо найти цену самого дорого товара для каждого бренда и оставить 10 брендов с самыми низкими такими ценами.
Запрос должен вернуть только наименования брендов.
Подсказка: результат работы функции агрегации не обязательно указывать в блоке SELECT, его можно указать ниже при сортировке или фильтрации по агрегированному значению.
Ключевые слова и фразы: JOIN, GROUP, ORDER, MAX, LIMIT.

5. Найти в разрезе полов/гендеров покупателей среднее количество транзакций на одного покупателя (с транзакцией) за период с 1 февраля 2025 по 14 марта 2025 включительно.
Запрос должен вернуть две колонки: код пола/гендера и количество уникальных транзакций на одного покупателя.
Подсказка: postgreSQL не умеет сам приводить числитель к вещественному значению. Для него отношение целого к целому - это округленное целое. Необходимо принудительно приводить числитель к вещественному значению.
Ключевые слова и фразы: JOIN, GROUP, DISTINCT, CAST.

6. Найти в разрезе идентификаторов городов количество транзакций за период с 1 апреля 2025 на один действующий магазин (любой действующий, может быть и без транзакций).
Запрос должен вернуть две колонки: идентификатор города и количество транзакций на один действующий магазин.
Подсказка: postgreSQL не умеет сам приводить числитель к вещественному значению. Для него отношение целого к целому - это округленное целое. Необходимо принудительно приводить числитель к вещественному значению.
Подсказка: в Clickhouse у действующих магазинов дата закрытия 1 января 1970.
Ключевые слова и фразы: LEFT JOIN, GROUP, DISTINCT, CAST.

7. Для каждой категории необходимо определить долю количества купленных товаров этой категории ко всем транзакциям с 1 марта 2025.
Другими словами необходимо найти пенетрацию (долю вхождения) категории во все транзакции.
Запрос должен вернуть две колонки: наименование категории и значение доли.
Подсказка: postgreSQL не умеет сам приводить числитель к вещественному значению. Для него отношение целого к целому - это округленное целое. Необходимо принудительно приводить числитель к вещественному значению.
Ключевые слова и фразы: JOIN, GROUP, CAST, подзапрос, MAX.

8. Для всех действующих или закрытых с 1 июля 2025 гипермаркетов необходимо найти среднюю площадь, минимальную дату открытия и уникальное количество городов, в которых они действуют. Данные необходимо вывести в разрезе года открытия гипермаркета.
Запрос должен вернуть 4 колонки: год открытия (измерение), средняя площадь (метрика), дата открытия первого такого гипермаркета (метрика) для соответствующего измерения, количество уникальных городов, которых были открыты такие гипермаркеты в соответствующем году.
Ключевые слова и фразы: JOIN, GROUP, EXTRACT, DISTINCT.

9. Найти топ-5 идентификаторов городов вывести уникальное количество товаров (не штук, а конкретных товаров), единиц товаров (qnty) в среднем на один магазин в соответствующем городе, купленных за период с апреля по май 2025 года.
Запрос должен вернуть 3 колонки: идентификатор города, уникальное количество товаров (не штук, а конкретных товаров), количество единиц товаров (qnty) в среднем на один магазин в этом городе за заданный период.
Топ-5 идентификаторов городов находим по убыванию значения единиц товаров (qnty) в среднем на один магазин в соответствующем городе.
Подсказка: в этом задании приведение типов для нахождения среднего не делаем.
Ключевые слова и фразы: JOIN, GROUP, ORDER, LIMIT.

10. Найти уникальные наименования брендов, товары которых не покупали в первые 15 дней марта 2025 года.
Подсказка: left join позволяет использовать несколько условий соединения.
Подсказка: в Clickhouse для поиска товаров, которые не продаются, необходимо использовать настройку join_use_nulls.
Ключевые слова и фразы: JOIN, LEFT JOIN, GROUP.

11. Для каждой пары "идентификатор города и наименование категории товара" определить общее количество купленных единиц товаров (qnty) за первые 20 дней апреля 2025. В итоге оставить топ-10 пар, у которых суммарно больше всего купленных товаров (qnty).
Запрос должен вернуть 3 колонки: идентификатор города, наименование категории, количество купленных товаров за период.
Ключевые слова и фразы: JOIN, GROUP, ORDER, LIMIT